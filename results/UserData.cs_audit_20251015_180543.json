{
  "error": "Respuesta no es JSON v√°lido",
  "raw": "```json\n{\n  \"file\": \"UserData.cs\",\n  \"vulnerabilities\": [\n    {\n      \"title\": \"Potential SQL Injection\",\n      \"severity\": \"HIGH\",\n      \"cwe_id\": \"CWE-89\",\n      \"description\": \"Although parameterized queries are used, if the input is not properly validated or sanitized, it could lead to SQL injection vulnerabilities.\",\n      \"line_numbers\": [12],\n      \"recommendation\": \"Ensure that the input 'email' is validated and sanitized before being used in the SQL query.\"\n    },\n    {\n      \"title\": \"Insecure Password Storage\",\n      \"severity\": \"CRITICAL\",\n      \"cwe_id\": \"CWE-256\",\n      \"description\": \"Storing passwords as hashes without a strong hashing algorithm (e.g., bcrypt, Argon2) can lead to vulnerabilities if the database is compromised.\",\n      \"line_numbers\": [15],\n      \"recommendation\": \"Use a strong hashing algorithm with a unique salt for each password to enhance security.\"\n    },\n    {\n      \"title\": \"Information Exposure\",\n      \"severity\": \"MEDIUM\",\n      \"cwe_id\": \"CWE-200\",\n      \"description\": \"Returning user information such as email and role can expose sensitive data if not handled properly.\",\n      \"line_numbers\": [18],\n      \"recommendation\": \"Limit the information returned to only what is necessary and consider implementing access controls.\"\n    }\n  ]\n}\n```"
}